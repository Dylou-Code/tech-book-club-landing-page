1. Créer les fichiers de base dans chaque dossier :
    - `base/_reset.scss`
    - `base/_typography.scss`
    - `components/_buttons.scss`
    - `components/_cards.scss`
    - `layout/_header.scss`
    - `layout/_footer.scss`
    - `layout/_grid.scss`
    - `pages/_home.scss`
    - `pages/_about.scss`
    - `themes/_default.scss`
    - `themes/_dark.scss`
    - `utils/_variables.scss`
    - `utils/_mixins.scss`
    - `vendors/_bootstrap.scss`

2. Importer tous les fichiers dans `main.scss` :
    ```scss
    @import 'base/reset';
    @import 'base/typography';
    @import 'components/buttons';
    @import 'components/cards';
    @import 'layout/header';
    @import 'layout/footer';
    @import 'layout/grid';
    @import 'pages/home';
    @import 'pages/about';
    @import 'themes/default';
    @import 'themes/dark';
    @import 'utils/variables';
    @import 'utils/mixins';
    @import 'vendors/bootstrap';
    ```

3. Commencer par définir les variables dans `utils/_variables.scss` :
    ```scss
    $primary-color: #3498db;
    $secondary-color: #2ecc71;
    $font-stack: 'Helvetica Neue', sans-serif;
    ```

4. Ajouter des mixins utiles dans `utils/_mixins.scss` :
    ```scss
    @mixin flex-center {
      display: flex;
      justify-content: center;
      align-items: center;
    }
    ```

5. Écrire les styles de base dans `base/_reset.scss` et `base/_typography.scss` :
    ```scss
    // _reset.scss
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    // _typography.scss
    body {
      font-family: $font-stack;
      color: $primary-color;
    }
    ```

6. Ajouter des styles pour les composants dans `components/_buttons.scss` et `components/_cards.scss` :
    ```scss
    // _buttons.scss
    .btn {
      background-color: $primary-color;
      color: #fff;
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    // _cards.scss
    .card {
      border: 1px solid #ddd;
      padding: 20px;
      border-radius: 5px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    ```

7. Structurer la mise en page dans `layout/_header.scss`, `layout/_footer.scss`, et `layout/_grid.scss` :
    ```scss
    // _header.scss
    header {
      background-color: $secondary-color;
      padding: 20px;
      text-align: center;
    }

    // _footer.scss
    footer {
      background-color: $secondary-color;
      padding: 20px;
      text-align: center;
    }

    // _grid.scss
    .container {
      width: 100%;
      margin: 0 auto;
      padding: 0 20px;
    }
    ```

8. Ajouter des styles spécifiques aux pages dans `pages/_home.scss` et `pages/_about.scss` :
    ```scss
    // _home.scss
    .home {
      @include flex-center;
      height: 100vh;
      background-color: lighten($primary-color, 20%);
    }

    // _about.scss
    .about {
      padding: 50px;
      background-color: lighten($secondary-color, 20%);
    }
    ```

9. Définir les thèmes dans `themes/_default.scss` et `themes/_dark.scss` :
    ```scss
    // _default.scss
    body {
      background-color: #fff;
      color: #333;
    }

    // _dark.scss
    body {
      background-color: #333;
      color: #fff;
    }
    ```

10. Importer les styles des vendors dans `vendors/_bootstrap.scss` :
     ```scss
     @import '~bootstrap/scss/bootstrap';
     ```

11. Compiler `main.scss` en CSS et inclure le fichier CSS résultant dans votre HTML.